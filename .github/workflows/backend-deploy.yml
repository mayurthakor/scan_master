name: Deploy Backend Services (Smart)

# When this workflow runs
on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]  # Only run when backend files change
  workflow_dispatch:  # Allow manual trigger

# Environment variables
env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT_ID }}
  GCS_BUCKET: ${{ secrets.GCS_BUCKET }}
  PRIMARY_REGION: us-central1
  SECONDARY_REGION: asia-south1

jobs:
  detect-changes:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      generate-doc-summary: ${{ steps.changes.outputs.generate-doc-summary }}
      chat-service: ${{ steps.changes.outputs.chat-service }}
      conversion-service: ${{ steps.changes.outputs.conversion-service }}
      check-upload-allowance: ${{ steps.changes.outputs.check-upload-allowance }}
      delete-file: ${{ steps.changes.outputs.delete-file }}
      get-download-url: ${{ steps.changes.outputs.get-download-url }}
      subscription-service: ${{ steps.changes.outputs.subscription-service }}
      verify-payment: ${{ steps.changes.outputs.verify-payment }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for change detection
    
    - name: Detect changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          generate-doc-summary:
            - 'backend/generate_doc_summary_service/**'
          chat-service:
            - 'backend/chat_service/**'
          conversion-service:
            - 'backend/conversion_service/**'
          check-upload-allowance:
            - 'backend/check_upload_allowance_service/**'
          delete-file:
            - 'backend/delete_file_service/**'
          get-download-url:
            - 'backend/get_download_url_service/**'
          subscription-service:
            - 'backend/subscription_service/**'
          verify-payment:
            - 'backend/verify_payment_service/**'

  deploy-services:
    name: Deploy Changed Services
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.generate-doc-summary == 'true' || needs.detect-changes.outputs.chat-service == 'true' || needs.detect-changes.outputs.conversion-service == 'true' || needs.detect-changes.outputs.check-upload-allowance == 'true' || needs.detect-changes.outputs.delete-file == 'true' || needs.detect-changes.outputs.get-download-url == 'true' || needs.detect-changes.outputs.subscription-service == 'true' || needs.detect-changes.outputs.verify-payment == 'true' }}
    
    steps:
    # Setup steps
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCLOUD_SA_KEY }}
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
    
    # Conditional deployments
    - name: Deploy generate-doc-summary
      if: ${{ needs.detect-changes.outputs.generate-doc-summary == 'true' }}
      run: |
        echo "ðŸš€ Deploying generate-doc-summary service to multiple regions..."
        cd backend/generate_doc_summary_service
        
        # Deploy to US Central (Primary)
        echo "Deploying to us-central1..."
        gcloud functions deploy generate-doc-summary \
          --gen2 \
          --runtime=python311 \
          --region=${{ env.PRIMARY_REGION }} \
          --source=. \
          --entry-point=generate_doc_summary \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars="GCS_BUCKET=${{ secrets.GCS_BUCKET }}" \
          --memory=512MB \
          --timeout=540s
        
        # Deploy to Asia South (Secondary)
        echo "Deploying to asia-south1..."
        gcloud functions deploy generate-doc-summary \
          --gen2 \
          --runtime=python311 \
          --region=${{ env.SECONDARY_REGION }} \
          --source=. \
          --entry-point=generate_doc_summary \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars="GCS_BUCKET=${{ secrets.GCS_BUCKET }}" \
          --memory=512MB \
          --timeout=540s

    - name: Deploy conversion-service
      if: ${{ needs.detect-changes.outputs.conversion-service == 'true' }}
      run: |
        echo "ðŸš€ Deploying conversion service..."
        cd backend/conversion_service
        gcloud run deploy process-file-to-pdf \
          --source=. \
          --region=us-central1 \
          --allow-unauthenticated \
          --memory=2Gi \
          --cpu=2 \
          --timeout=600 \
          --clear-base-image

    - name: Deploy check-upload-allowance
      if: ${{ needs.detect-changes.outputs.check-upload-allowance == 'true' }}
      run: |
        echo "ðŸš€ Deploying check-upload-allowance service..."
        cd backend/check_upload_allowance_service
        gcloud functions deploy check-upload-allowance \
          --gen2 \
          --runtime=python311 \
          --region=us-central1 \
          --source=. \
          --entry-point=check_upload_allowance \
          --trigger-http \
          --allow-unauthenticated \
          --memory=256MB \
          --timeout=60s

    - name: Deploy delete-file
      if: ${{ needs.detect-changes.outputs.delete-file == 'true' }}
      run: |
        echo "ðŸš€ Deploying delete-file service..."
        cd backend/delete_file_service
        gcloud functions deploy delete-file \
          --gen2 \
          --runtime=python311 \
          --region=us-central1 \
          --source=. \
          --entry-point=delete_file \
          --trigger-http \
          --allow-unauthenticated \
          --memory=256MB \
          --timeout=60s

    - name: Deploy get-download-url
      if: ${{ needs.detect-changes.outputs.get-download-url == 'true' }}
      run: |
        echo "ðŸš€ Deploying get-download-url service..."
        cd backend/get_download_url_service
        gcloud functions deploy get-download-url \
          --gen2 \
          --runtime=python311 \
          --region=us-central1 \
          --source=. \
          --entry-point=get_download_url \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars="GCS_BUCKET=${{ secrets.GCS_BUCKET }}" \
          --memory=256MB \
          --timeout=60s

    - name: Deploy subscription-service
      if: ${{ needs.detect-changes.outputs.subscription-service == 'true' }}
      run: |
        echo "ðŸš€ Deploying subscription service..."
        cd backend/subscription_service
        gcloud functions deploy create-subscription-order \
          --gen2 \
          --runtime=python311 \
          --region=us-central1 \
          --source=. \
          --entry-point=create_subscription_order \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars="RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" \
          --memory=256MB \
          --timeout=60s

    - name: Deploy verify-payment
      if: ${{ needs.detect-changes.outputs.verify-payment == 'true' }}
      run: |
        echo "ðŸš€ Deploying verify-payment service..."
        cd backend/verify_payment_service
        gcloud functions deploy verify-payment \
          --gen2 \
          --runtime=python311 \
          --region=us-central1 \
          --source=. \
          --entry-point=verify_payment \
          --trigger-http \
          --allow-unauthenticated \
          --set-env-vars="RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}" \
          --memory=256MB \
          --timeout=60s

    # Summary
    - name: Deployment Summary
      run: |
        echo "âœ… Deployment completed!"
        echo "ðŸ“Š Services deployed:"
        echo "  - generate-doc-summary: ${{ needs.detect-changes.outputs.generate-doc-summary }}"
        echo "  - chat-service: ${{ needs.detect-changes.outputs.chat-service }}"
        echo "  - conversion-service: ${{ needs.detect-changes.outputs.conversion-service }}"
        echo "  - check-upload-allowance: ${{ needs.detect-changes.outputs.check-upload-allowance }}"
        echo "  - delete-file: ${{ needs.detect-changes.outputs.delete-file }}"
        echo "  - get-download-url: ${{ needs.detect-changes.outputs.get-download-url }}"
        echo "  - subscription-service: ${{ needs.detect-changes.outputs.subscription-service }}"
        echo "  - verify-payment: ${{ needs.detect-changes.outputs.verify-payment }}"
